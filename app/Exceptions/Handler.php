<?php

namespace App\Exceptions;

use App\Http\Responses\ResponseError;
use App\Models\ErrorException;
use App\Models\ExceptionError;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;

use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $exception)
    {

        if ($exception instanceof \Exception) {
            ErrorException::query()->create([
                'message' => $exception->getMessage(),
                'file' => $exception->getFile(),
                'line' => $exception->getLine(),
                'code' => $exception->getCode(),
                'content' => "handle response"
            ]);

            Log::error($exception);

            if (!config('app.debug')) {
                return response()->json((new ResponseError('Hệ thống đang gián đoạn.'))->toArray());
            }
        }


        return parent::render($request, $exception); // TODO: Change the autogenerated stub
    }
}
